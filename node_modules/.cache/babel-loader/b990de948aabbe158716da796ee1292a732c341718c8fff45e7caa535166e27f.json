{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react-cards-boostrap\\\\src\\\\componentes\\\\hoteles\\\\hoteles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './hoteles.css';\nimport Card from '../Card';\nimport Search from './componentes/searchComponent/searchComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hoteles = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/api/hoteles');\n        if (!response.ok) {\n          throw new Error('Error al obtener los datos');\n        }\n        const jsonData = await response.json();\n        console.log(jsonData);\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    const filterData = async filtro => {\n      try {\n        const response = await fetch('http://localhost:3000/api/hoteles/filtro');\n        if (!response.ok) {\n          throw new Error('Error al obtener los datos');\n        }\n        const jsonData = await response.json();\n        console.log(jsonData);\n        setData(jsonData);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex justify-content-center align-items-center h-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: data.map(hotel => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          nombre: hotel.nombre,\n          imagen: hotel.imagen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Hoteles, \"/iJyIuGohDU8HmiUawlNhy7FaxE=\");\n_c = Hoteles;\nexport default Hoteles;\nvar _c;\n$RefreshReg$(_c, \"Hoteles\");","map":{"version":3,"names":["React","useEffect","useState","Card","Search","jsxDEV","_jsxDEV","Hoteles","_s","data","setData","isLoading","setIsLoading","error","setError","fetchData","response","fetch","ok","Error","jsonData","json","console","log","message","filterData","filtro","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","hotel","nombre","imagen","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/react-cards-boostrap/src/componentes/hoteles/hoteles.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './hoteles.css'\r\nimport Card from '../Card';\r\nimport Search from './componentes/searchComponent/searchComponent'\r\n\r\nconst Hoteles = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/hoteles');\r\n                if (!response.ok) {\r\n                    throw new Error('Error al obtener los datos');\r\n                }\r\n                const jsonData = await response.json();\r\n                console.log(jsonData);\r\n                setData(jsonData);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        const filterData = async (filtro) => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/api/hoteles/filtro');\r\n                if (!response.ok) {\r\n                    throw new Error('Error al obtener los datos');\r\n                }\r\n                const jsonData = await response.json();\r\n                console.log(jsonData);\r\n                setData(jsonData);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                setError(error.message);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <div>Cargando...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n       \r\n\r\n        <div className=\"container d-flex justify-content-center align-items-center h-100\">\r\n            <div className='row'>\r\n                {\r\n                    data.map( hotel => (\r\n                        <div className=\"col-md-4\" key={hotel.id} >\r\n                            <Card nombre={hotel.nombre} imagen={hotel.imagen}/>\r\n                        </div>  \r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Hoteles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}